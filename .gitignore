# =============================================================================
# GITIGNORE OTIMIZADO PARA PROJETO MEMOTECA (Angular + Node.js)
# =============================================================================

# -----------------------------------------------------------------------------
# ANGULAR / FRONTEND
# -----------------------------------------------------------------------------

# Build outputs
/dist/
/tmp/
/out-tsc/
/bazel-out/

# Angular specific
/.angular/
.angular/cache/
*.ngfactory.ts
*.ngstyle.ts

# Compilation cache
.tsbuildinfo

# -----------------------------------------------------------------------------
# NODE.JS / BACKEND
# -----------------------------------------------------------------------------

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Backend specific
backend/node_modules/
backend/npm-debug.log*
backend/yarn-error.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# -----------------------------------------------------------------------------
# ENVIRONMENT & CONFIG
# -----------------------------------------------------------------------------

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# Config files with sensitive data
config.json
config.local.json
.config

# -----------------------------------------------------------------------------
# LOGS
# -----------------------------------------------------------------------------

# Log files
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# -----------------------------------------------------------------------------
# CACHE & TEMPORARY FILES
# -----------------------------------------------------------------------------

# Cache directories
.cache/
.sass-cache/
.npm/
.eslintcache
.stylelintcache

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# Connect lock file
/connect.lock

# -----------------------------------------------------------------------------
# TESTING
# -----------------------------------------------------------------------------

# Test coverage
/coverage/
.nyc_output/

# Test results
/test-results/
/playwright-report/
/playwright/.cache/

# Unit test / spec files (uncomment if not using tests)
# *.spec.ts
# *.spec.js

# E2E test results
/e2e/screenshots/
/e2e/videos/

# -----------------------------------------------------------------------------
# IDEs & EDITORS
# -----------------------------------------------------------------------------

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
.history/
*.vsix

# IntelliJ IDEA / WebStorm
.idea/
*.swp
*.swo
*~

# Sublime Text
*.sublime-workspace
*.sublime-project

# Vim
*.swp
*.swo
*.swn

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc

# Eclipse
.project
.classpath
.c9/
*.launch
.settings/

# -----------------------------------------------------------------------------
# OPERATING SYSTEM
# -----------------------------------------------------------------------------

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.lnk

# Linux
*~

# -----------------------------------------------------------------------------
# MISCELLANEOUS
# -----------------------------------------------------------------------------

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache/

# Next.js build output
.next/

# Nuxt.js build / generate output
.nuxt/

# Gatsby files
.cache/
public/

# Storybook build outputs
.out/
.storybook-out/

# Rollup.js default build output
dist/

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# -----------------------------------------------------------------------------
# SECURITY & SENSITIVE DATA
# -----------------------------------------------------------------------------

# SSL certificates
*.pem
*.key
*.crt
*.csr

# Database files (if any)
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup

# -----------------------------------------------------------------------------
# BUILD TOOLS & DEPLOYMENT
# -----------------------------------------------------------------------------

# Webpack bundles analysis
bundle-analyzer-report.html

# PWA files
sw.js
workbox-*.js

# Firebase
.firebase/
firebase-debug.log
firestore-debug.log

# Vercel
.vercel/

# Netlify
.netlify/

# -----------------------------------------------------------------------------
# CUSTOM PROJECT FILES
# -----------------------------------------------------------------------------

# Custom documentation that shouldn't be versioned
/docs/temp/

# Local development files
local.*
*.local

# Backup database (JSON Server)
backend/db.backup.json
backend/db.*.json
!backend/db.json

# =============================================================================
# END OF GITIGNORE
# =============================================================================
